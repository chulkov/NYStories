//
//  StoryListPresenter.swift
//  NYStories
//
//  Created by Maksim Chulkov on 17.05.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StoryListPresentationLogic
{
  func presentSomething(response: StoryList.Something.Response)
}

class StoryListPresenter: StoryListPresentationLogic
{
  weak var viewController: StoryListDisplayLogic?
  
  // MARK: Do something
  
  func presentSomething(response: StoryList.Something.Response) {
      print("we are at presenter and have \(response.stories.count)")
    let viewModel = makeViewModel(for: response)
    viewController?.displaySomething(viewModel: viewModel)
  }
    
    private func makeViewModel(for response: StoryList.Something.Response) -> StoryList.Something.ViewModel {
//        var model = [StoryListTableViewCellModel]()
        var displaydStories = [StoryList.Something.ViewModel.DisplayedStory]()
        
        
        for story in response.stories {
            displaydStories.append(StoryList.Something.ViewModel.DisplayedStory(image: UIImage(),
                                                                                title: story.title,
                                                                                author: story.author,
                                                                                description: story.description,
                                                                                url: story.url))
        }
        return StoryList.Something.ViewModel(displayedStory: displaydStories)
    }
    
}
